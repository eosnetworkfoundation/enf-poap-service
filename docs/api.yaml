openapi: 3.0.0
info:
    description: API For storing POAP
    version: '1.0.0'
    title: POAP API
paths:
    /v1/poap/{id}:
        get:
            summary: Gets poap metadata for the given id
            operationId: getPoap
            parameters:
                - name: id
                  in: path
                  description: id of the poap
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: found poap
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PoapMetadata'
                '404':
                    description: 'poap not found'
                '500':
                    description: 'internal server error'
    /v1/poap/store:
        post:
            summary: Stores poap metadata in DB and returns claim code
            operationId: storePoap
            requestBody:
                required: true
                content:
                    json:
                        schema:
                            $ref: '#/components/schemas/PoapMetadata'
            responses:
                '201':
                    description: poap stored
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PoapClaimData'
                '400':
                    description: 'invalid input, object invalid'
                '500':
                    description: 'internal server error, potentially with storing in the DB'
    /v1/poap/claim:
        post:
            summary: Claims poap token for the user
            operationId: claimPoap
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                claimCode:
                                    type: string
                                    example: abc123
                                address:
                                    type: string
                                    example: '0x1234567890123456789012345678901234567890'
            responses:
                '200':
                    description: successfully added token to user
                '400':
                    description: 'invalid input, object invalid'
                '404':
                    description: 'poap not found'
                '500':
                    description: 'internal server error'
    /v1/poap/claimed:
        get:
            summary: Gets claimed poap tokens for the user
            operationId: claimedPoap
            parameters:
                - name: address
                  in: query
                  description: address of the user
                  required: true
                  schema:
                      type: string
                      example: '0x12345678901234567890123456789'
            responses:
                '200':
                    description: found tokens
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    tokens:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PoapMetadata'
                '400':
                    description: 'invalid input, object invalid'
                '500':
                    description: 'internal server error, potentially with storing in the DB'
    /v1/images/upload:
        post:
            summary: Uploads an image to our DB, returns a url
            operationId: uploadImage
            responses:
                '201':
                    description: image stored in db
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImageClientData'
                '400':
                    description: 'invalid input, object invalid'
                '500':
                    description: 'internal server error, potentially with storing in the DB'
            requestBody:
                required: true
                description: See https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects#sending_files_using_a_formdata_object for an example of sending files using formdata.
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/ImageFile'
components:
    schemas:
        PoapMetadata:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                    example: ENF Fireside Chat Participation
                description:
                    type: string
                    example: Demonstrates participation in an ENF fireside chat
                imageUrl:
                    type: string
                    example: https://cdn-images-1.medium.com/v2/resize:fit:800/1*5FNuSa1b6gVd70NmZQmu7Q.png
        ImageFile:
            type: object
            required:
                - file
            properties:
                file:
                    type: string
                    format: binary
        ImageClientData:
            type: object
            required:
                - url
            properties:
                url:
                    type: string
                    format: uri
                    example: https://cdn-images-1.medium.com/max/800/1*5FNuSa1b6gVd70NmZQmu7Q.png
        PoapClaimData:
            type: object
            required:
                - claimUrl
                - claimCode
            properties:
                claimUrl:
                    type: string
                    format: uri
                    example: https://localhost:3000/?id=abc123
                claimCode:
                    type: string
                    example: abc123
